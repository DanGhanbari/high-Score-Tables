{"ast":null,"code":"var _jsxFileName = \"/Users/saatchi/Documents/GitHub/high-scores-react/src/TableBody.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableBody = props => {\n  let sortScore;\n\n  if (props.sort === \"descending\") {\n    sortScore = props.elem.scores.sort((a, b) => {\n      return a.s - b.s;\n    });\n  } else {\n    sortScore = props.elem.scores.sort((a, b) => {\n      return b.s - a.s;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: sortScore.map((score, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"border_bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: score.n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: score.s\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableBody;\nexport default TableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"sources":["/Users/saatchi/Documents/GitHub/high-scores-react/src/TableBody.js"],"names":["TableBody","props","sortScore","sort","elem","scores","a","b","s","map","score","index","n"],"mappings":";;;AAAA,MAAMA,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAIC,SAAJ;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,YAAnB,EAAiC;AAC/BD,IAAAA,SAAS,GAAGD,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBF,IAAlB,CAAuB,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAC3C,aAAOD,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CAAf;AACD,KAFW,CAAZ;AAGD,GAJD,MAIO;AACLN,IAAAA,SAAS,GAAGD,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBF,IAAlB,CAAuB,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAC3C,aAAOA,CAAC,CAACC,CAAF,GAAMF,CAAC,CAACE,CAAf;AACD,KAFW,CAAZ;AAGD;;AACD,sBACE;AAAA,cACGN,SAAS,CAACO,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,0BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,gCACE;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKF,KAAK,CAACF;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAmCG,KAAnC;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;KAAMX,S;AAwBN,eAAeA,SAAf","sourcesContent":["const TableBody = (props) => {\n  let sortScore;\n  if (props.sort === \"descending\") {\n    sortScore = props.elem.scores.sort((a, b) => {\n      return a.s - b.s;\n    });\n  } else {\n    sortScore = props.elem.scores.sort((a, b) => {\n      return b.s - a.s;\n    });\n  }\n  return (\n    <tbody>\n      {sortScore.map((score, index) => {\n        return (\n          <tr className=\"border_bottom\" key={index}>\n            <td>{score.n}</td>\n            <td>{score.s}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}